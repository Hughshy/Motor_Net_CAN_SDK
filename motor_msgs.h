//
// Created by zcl on 23-2-20.
//

#ifndef MOTOR_NET_CAN_SDK_MOTOR_MSGS_H
#define MOTOR_NET_CAN_SDK_MOTOR_MSGS_H

#include <stdint.h>
#pragma pack(1)

/**
 * @brief 电机模式控制信息
 *
 */
typedef struct
{
    uint32_t id            ;      // 电机ID: 0,1...,14 15表示向所有电机广播数据(此时无返回)
    uint8_t status         ;      // 工作模式: 0.电子刹车 1.失能 2.FOC闭环 3.保留电机模式
    uint8_t control_mode   ;      // 控制模式: 0:电压控制，1: 力矩控制，2:速度控制，3:位置控制
    uint8_t input_mode     ;      // 电机输入模式:  0:失能，1:直接，5:位置梯形
} RIS_Mode_t;   // 控制模式

/**
 * @brief 电机状态控制信息
 *
 */
typedef struct
{
    float tor_des;            // 期望关节输出扭矩 unit: N.m     (q8)
    float vel_des;            // 期望关节输出速度 unit: rad/s   (q8)
    float pos_des;            // 期望关节输出位置 unit: rad     (q15)
    uint16_t  pos_gain;         // 期望关节刚度系数 unit: 0.0-1.0 (q15)
    uint16_t  vel_gain;         // 期望速度刚度系数 unit: 0.0-1.0 (q15)
    uint16_t  vel_integ_gain;   // 期望速度积分系数 unit: 0.0-1.0 (q15)

} RIS_Comd_t;   // 控制参数 12Byte

/**
 * @brief 电机状态反馈信息
 *
 */
typedef struct
{
    float  torque;        // 实际关节输出扭矩 unit: N.m     (q8)
    float  speed;         // 实际关节输出速度 unit: rad/s   (q8)
    float  pos;           // 实际关节输出位置 unit: W       (q15)
    uint8_t  MError;     // 电机错误标识: 0.正常 1.过热 2.过流 3.过压 4.编码器故障 5-7.保留
} RIS_Fbk_t;   // 状态数据 11Byte


#pragma pack()

#pragma pack(1)

/**
 * @brief 控制数据包格式
 *
 */
typedef struct
{
    RIS_Mode_t mode;    // 电机控制模式  1Byte
    RIS_Comd_t cmd;    // 电机期望数据 12Byte
} ControlData_t;    // 主机控制命令     13Byte

/**
 * @brief 电机反馈数据包格式
 *
 */
typedef struct
{
    RIS_Mode_t mode;    // 电机控制模式  1Byte
    RIS_Fbk_t   fbk;    // 电机反馈数据 11Byte
} MotorData_t;      // 电机返回数据     16Byte

#pragma pack()


// CMD_ID
enum {
    MSG_CO_NMT_CTRL = 0x000,       // CANOpen NMT Message REC
    MSG_ODRIVE_HEARTBEAT,
    MSG_ODRIVE_ESTOP,
    MSG_GET_MOTOR_ERROR,  // Errors
    MSG_GET_ENCODER_ERROR,
    MSG_GET_SENSORLESS_ERROR,
    MSG_SET_AXIS_NODE_ID,
    MSG_SET_AXIS_REQUESTED_STATE,
    MSG_SET_AXIS_STARTUP_CONFIG,
    MSG_GET_ENCODER_ESTIMATES,
    MSG_GET_ENCODER_COUNT,
    MSG_SET_CONTROLLER_MODES,
    MSG_SET_INPUT_POS,
    MSG_SET_INPUT_VEL,
    MSG_SET_INPUT_TORQUE,
    MSG_SET_VEL_LIMIT,
    MSG_START_ANTICOGGING,
    MSG_SET_TRAJ_VEL_LIMIT,
    MSG_SET_TRAJ_ACCEL_LIMITS,
    MSG_SET_TRAJ_INERTIA,
    MSG_GET_IQ,
    MSG_GET_SENSORLESS_ESTIMATES,
    MSG_RESET_ODRIVE,
    MSG_GET_VBUS_VOLTAGE,
    MSG_CLEAR_ERRORS,
    MSG_CO_HEARTBEAT_CMD = 0x700,  // CANOpen NMT Heartbeat  SEND
};

// CAN_TYPE
enum {
    STANDARD_FRAME = 0X01,
    EXTENDED_FRAME = 0X02,
    DATA_FRAME = 0X01,
    REMOTE_FRAME = 0X02,
};



// ODRIVE_CONTROL_VAR
enum {
    // ODrive.Axis.AxisState
    AXIS_STATE_UNDEFINED = 0,
    AXIS_STATE_IDLE = 1,
    AXIS_STATE_STARTUP_SEQUENCE = 2,
    AXIS_STATE_FULL_CALIBRATION_SEQUENCE = 3,
    AXIS_STATE_MOTOR_CALIBRATION = 4,
    AXIS_STATE_SENSORLESS_CONTROL = 5,
    AXIS_STATE_ENCODER_INDEX_SEARCH = 6,
    AXIS_STATE_ENCODER_OFFSET_CALIBRATION = 7,
    AXIS_STATE_CLOSED_LOOP_CONTROL = 8,
    AXIS_STATE_LOCKIN_SPIN = 9,
    AXIS_STATE_ENCODER_DIR_FIND = 10,
    AXIS_STATE_HOMING = 11,
    AXIS_STATE_ESTOP = 12,

    // ODrive.ThermistorCurrentLimiter.Error
    THERMISTOR_CURRENT_LIMITER_ERROR_NONE = 0x00000000,
    THERMISTOR_CURRENT_LIMITER_ERROR_OVER_TEMP = 0x00000001,

    // ODrive.Encoder.Mode
    ENCODER_MODE_INCREMENTAL = 0,
    ENCODER_MODE_HALL = 1,
    ENCODER_MODE_SINCOS = 2,
    ENCODER_MODE_SPI_ABS_CUI = 256,
    ENCODER_MODE_SPI_ABS_AMS = 257,
    ENCODER_MODE_SPI_ABS_AEAT = 258,

    // ODrive.Controller.ControlMode
    CONTROL_MODE_VOLTAGE_CONTROL = 0,
    CONTROL_MODE_TORQUE_CONTROL = 1,
    CONTROL_MODE_VELOCITY_CONTROL = 2,
    CONTROL_MODE_POSITION_CONTROL = 3,

    // ODrive.Controller.InputMode
    INPUT_MODE_INACTIVE = 0,
    INPUT_MODE_PASSTHROUGH = 1,
    INPUT_MODE_VEL_RAMP = 2,
    INPUT_MODE_POS_FILTER = 3,
    INPUT_MODE_MIX_CHANNELS = 4,
    INPUT_MODE_TRAP_TRAJ = 5,
    INPUT_MODE_TORQUE_RAMP = 6,
    INPUT_MODE_MIRROR = 7,

    // ODrive.Motor.MotorType
    MOTOR_TYPE_HIGH_CURRENT = 0,
    MOTOR_TYPE_GIMBAL = 2,
    MOTOR_TYPE_ACIM = 3,

    // ODrive.Can.Error
    CAN_ERROR_NONE = 0x00000000,
    CAN_ERROR_DUPLICATE_CAN_IDS = 0x00000001,

    // ODrive.Axis.Error
    AXIS_ERROR_NONE = 0x00000000,
    AXIS_ERROR_INVALID_STATE = 0x00000001,
    AXIS_ERROR_DC_BUS_UNDER_VOLTAGE = 0x00000002,
    AXIS_ERROR_DC_BUS_OVER_VOLTAGE = 0x00000004,
    AXIS_ERROR_CURRENT_MEASUREMENT_TIMEOUT = 0x00000008,
    AXIS_ERROR_BRAKE_RESISTOR_DISARMED = 0x00000010,
    AXIS_ERROR_MOTOR_DISARMED = 0x00000020,
    AXIS_ERROR_MOTOR_FAILED = 0x00000040,
    AXIS_ERROR_SENSORLESS_ESTIMATOR_FAILED = 0x00000080,
    AXIS_ERROR_ENCODER_FAILED = 0x00000100,
    AXIS_ERROR_CONTROLLER_FAILED = 0x00000200,
    AXIS_ERROR_POS_CTRL_DURING_SENSORLESS = 0x00000400,
    AXIS_ERROR_WATCHDOG_TIMER_EXPIRED = 0x00000800,
    AXIS_ERROR_MIN_ENDSTOP_PRESSED = 0x00001000,
    AXIS_ERROR_MAX_ENDSTOP_PRESSED = 0x00002000,
    AXIS_ERROR_ESTOP_REQUESTED = 0x00004000,
    AXIS_ERROR_HOMING_WITHOUT_ENDSTOP = 0x00020000,
    AXIS_ERROR_OVER_TEMP = 0x00040000,

    // ODrive.Axis.LockinState
    LOCKIN_STATE_INACTIVE = 0,
    LOCKIN_STATE_RAMP = 1,
    LOCKIN_STATE_ACCELERATE = 2,
    LOCKIN_STATE_CONST_VEL = 3,

    // ODrive.Motor.Error
    MOTOR_ERROR_NONE = 0x00000000,
    MOTOR_ERROR_PHASE_RESISTANCE_OUT_OF_RANGE = 0x00000001,
    MOTOR_ERROR_PHASE_INDUCTANCE_OUT_OF_RANGE = 0x00000002,
    MOTOR_ERROR_ADC_FAILED = 0x00000004,
    MOTOR_ERROR_DRV_FAULT = 0x00000008,
    MOTOR_ERROR_CONTROL_DEADLINE_MISSED = 0x00000010,
    MOTOR_ERROR_NOT_IMPLEMENTED_MOTOR_TYPE = 0x00000020,
    MOTOR_ERROR_BRAKE_CURRENT_OUT_OF_RANGE = 0x00000040,
    MOTOR_ERROR_MODULATION_MAGNITUDE = 0x00000080,
    MOTOR_ERROR_BRAKE_DEADTIME_VIOLATION = 0x00000100,
    MOTOR_ERROR_UNEXPECTED_TIMER_CALLBACK = 0x00000200,
    MOTOR_ERROR_CURRENT_SENSE_SATURATION = 0x00000400,
    MOTOR_ERROR_CURRENT_LIMIT_VIOLATION = 0x00001000,
    MOTOR_ERROR_BRAKE_DUTY_CYCLE_NAN = 0x00002000,
    MOTOR_ERROR_DC_BUS_OVER_REGEN_CURRENT = 0x00004000,
    MOTOR_ERROR_DC_BUS_OVER_CURRENT = 0x00008000,

    // ODrive.Motor.ArmedState
    ARMED_STATE_DISARMED = 0,
    ARMED_STATE_WAITING_FOR_TIMINGS = 1,
    ARMED_STATE_WAITING_FOR_UPDATE = 2,
    ARMED_STATE_ARMED = 3,

    // ODrive.Motor.GateDriver.DrvFault
    DRV_FAULT_NO_FAULT = 0x00000000,
    DRV_FAULT_FET_LOW_C_OVERCURRENT = 0x00000001,
    DRV_FAULT_FET_HIGH_C_OVERCURRENT = 0x00000002,
    DRV_FAULT_FET_LOW_B_OVERCURRENT = 0x00000004,
    DRV_FAULT_FET_HIGH_B_OVERCURRENT = 0x00000008,
    DRV_FAULT_FET_LOW_A_OVERCURRENT = 0x00000010,
    DRV_FAULT_FET_HIGH_A_OVERCURRENT = 0x00000020,
    DRV_FAULT_OVERTEMPERATURE_WARNING = 0x00000040,
    DRV_FAULT_OVERTEMPERATURE_SHUTDOWN = 0x00000080,
    DRV_FAULT_P_VDD_UNDERVOLTAGE = 0x00000100,
    DRV_FAULT_G_VDD_UNDERVOLTAGE = 0x00000200,
    DRV_FAULT_G_VDD_OVERVOLTAGE = 0x00000400,

    // ODrive.Controller.Error
    CONTROLLER_ERROR_NONE = 0x00000000,
    CONTROLLER_ERROR_OVERSPEED = 0x00000001,
    CONTROLLER_ERROR_INVALID_INPUT_MODE = 0x00000002,
    CONTROLLER_ERROR_UNSTABLE_GAIN = 0x00000004,
    CONTROLLER_ERROR_INVALID_MIRROR_AXIS = 0x00000008,
    CONTROLLER_ERROR_INVALID_LOAD_ENCODER = 0x00000010,
    CONTROLLER_ERROR_INVALID_ESTIMATE = 0x00000020,

    // ODrive.Encoder.Error
    ENCODER_ERROR_NONE = 0x00000000,
    ENCODER_ERROR_UNSTABLE_GAIN = 0x00000001,
    ENCODER_ERROR_CPR_POLEPAIRS_MISMATCH = 0x00000002,
    ENCODER_ERROR_NO_RESPONSE = 0x00000004,
    ENCODER_ERROR_UNSUPPORTED_ENCODER_MODE = 0x00000008,
    ENCODER_ERROR_ILLEGAL_HALL_STATE = 0x00000010,
    ENCODER_ERROR_INDEX_NOT_FOUND_YET = 0x00000020,
    ENCODER_ERROR_ABS_SPI_TIMEOUT = 0x00000040,
    ENCODER_ERROR_ABS_SPI_COM_FAIL = 0x00000080,
    ENCODER_ERROR_ABS_SPI_NOT_READY = 0x00000100,

    // ODrive.SensorlessEstimator.Error
    SENSORLESS_ESTIMATOR_ERROR_NONE = 0x00000000,
    SENSORLESS_ESTIMATOR_ERROR_UNSTABLE_GAIN = 0x00000001,
};














#endif //MOTOR_NET_CAN_SDK_MOTOR_MSGS_H
